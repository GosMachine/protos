// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.1
// source: drops/drops.proto

package dropsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StartWatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel string   `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	Tokens  []string `protobuf:"bytes,2,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *StartWatchRequest) Reset() {
	*x = StartWatchRequest{}
	mi := &file_drops_drops_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartWatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartWatchRequest) ProtoMessage() {}

func (x *StartWatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartWatchRequest.ProtoReflect.Descriptor instead.
func (*StartWatchRequest) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{0}
}

func (x *StartWatchRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *StartWatchRequest) GetTokens() []string {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type StopWatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens []string `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *StopWatchRequest) Reset() {
	*x = StopWatchRequest{}
	mi := &file_drops_drops_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopWatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopWatchRequest) ProtoMessage() {}

func (x *StopWatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopWatchRequest.ProtoReflect.Descriptor instead.
func (*StopWatchRequest) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{1}
}

func (x *StopWatchRequest) GetTokens() []string {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type GetActiveGamesInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Games []*GameInfo `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty"`
}

func (x *GetActiveGamesInfoResponse) Reset() {
	*x = GetActiveGamesInfoResponse{}
	mi := &file_drops_drops_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveGamesInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveGamesInfoResponse) ProtoMessage() {}

func (x *GetActiveGamesInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveGamesInfoResponse.ProtoReflect.Descriptor instead.
func (*GetActiveGamesInfoResponse) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{2}
}

func (x *GetActiveGamesInfoResponse) GetGames() []*GameInfo {
	if x != nil {
		return x.Games
	}
	return nil
}

type GameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveWorkers  int64  `protobuf:"varint,1,opt,name=activeWorkers,proto3" json:"activeWorkers,omitempty"`
	CurrentChannel string `protobuf:"bytes,2,opt,name=currentChannel,proto3" json:"currentChannel,omitempty"`
	LeftToWatch    int64  `protobuf:"varint,3,opt,name=leftToWatch,proto3" json:"leftToWatch,omitempty"`
	SuccessCount   int64  `protobuf:"varint,4,opt,name=successCount,proto3" json:"successCount,omitempty"`
	Name           string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Slug           string `protobuf:"bytes,6,opt,name=slug,proto3" json:"slug,omitempty"`
}

func (x *GameInfo) Reset() {
	*x = GameInfo{}
	mi := &file_drops_drops_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameInfo) ProtoMessage() {}

func (x *GameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameInfo.ProtoReflect.Descriptor instead.
func (*GameInfo) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{3}
}

func (x *GameInfo) GetActiveWorkers() int64 {
	if x != nil {
		return x.ActiveWorkers
	}
	return 0
}

func (x *GameInfo) GetCurrentChannel() string {
	if x != nil {
		return x.CurrentChannel
	}
	return ""
}

func (x *GameInfo) GetLeftToWatch() int64 {
	if x != nil {
		return x.LeftToWatch
	}
	return 0
}

func (x *GameInfo) GetSuccessCount() int64 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *GameInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GameInfo) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type UpdateDropsAccountsInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts []*Token `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
}

func (x *UpdateDropsAccountsInfoRequest) Reset() {
	*x = UpdateDropsAccountsInfoRequest{}
	mi := &file_drops_drops_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDropsAccountsInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDropsAccountsInfoRequest) ProtoMessage() {}

func (x *UpdateDropsAccountsInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDropsAccountsInfoRequest.ProtoReflect.Descriptor instead.
func (*UpdateDropsAccountsInfoRequest) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateDropsAccountsInfoRequest) GetAccounts() []*Token {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type UpdateFarmListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Games []*FarmListGame `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty"`
}

func (x *UpdateFarmListRequest) Reset() {
	*x = UpdateFarmListRequest{}
	mi := &file_drops_drops_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFarmListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFarmListRequest) ProtoMessage() {}

func (x *UpdateFarmListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFarmListRequest.ProtoReflect.Descriptor instead.
func (*UpdateFarmListRequest) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateFarmListRequest) GetGames() []*FarmListGame {
	if x != nil {
		return x.Games
	}
	return nil
}

type FarmListGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug     string   `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
	Name     string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Channels []string `protobuf:"bytes,3,rep,name=channels,proto3" json:"channels,omitempty"`
	Farm     bool     `protobuf:"varint,4,opt,name=farm,proto3" json:"farm,omitempty"`
}

func (x *FarmListGame) Reset() {
	*x = FarmListGame{}
	mi := &file_drops_drops_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FarmListGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FarmListGame) ProtoMessage() {}

func (x *FarmListGame) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FarmListGame.ProtoReflect.Descriptor instead.
func (*FarmListGame) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{6}
}

func (x *FarmListGame) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *FarmListGame) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FarmListGame) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *FarmListGame) GetFarm() bool {
	if x != nil {
		return x.Farm
	}
	return false
}

type GetCollectedCampaignsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Campaigns []string `protobuf:"bytes,1,rep,name=campaigns,proto3" json:"campaigns,omitempty"`
}

func (x *GetCollectedCampaignsResponse) Reset() {
	*x = GetCollectedCampaignsResponse{}
	mi := &file_drops_drops_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCollectedCampaignsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectedCampaignsResponse) ProtoMessage() {}

func (x *GetCollectedCampaignsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectedCampaignsResponse.ProtoReflect.Descriptor instead.
func (*GetCollectedCampaignsResponse) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{7}
}

func (x *GetCollectedCampaignsResponse) GetCampaigns() []string {
	if x != nil {
		return x.Campaigns
	}
	return nil
}

type ClearCollectedCampaignsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameSlug   string `protobuf:"bytes,1,opt,name=gameSlug,proto3" json:"gameSlug,omitempty"`
	CampaignId string `protobuf:"bytes,2,opt,name=campaignId,proto3" json:"campaignId,omitempty"`
}

func (x *ClearCollectedCampaignsRequest) Reset() {
	*x = ClearCollectedCampaignsRequest{}
	mi := &file_drops_drops_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClearCollectedCampaignsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearCollectedCampaignsRequest) ProtoMessage() {}

func (x *ClearCollectedCampaignsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearCollectedCampaignsRequest.ProtoReflect.Descriptor instead.
func (*ClearCollectedCampaignsRequest) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{8}
}

func (x *ClearCollectedCampaignsRequest) GetGameSlug() string {
	if x != nil {
		return x.GameSlug
	}
	return ""
}

func (x *ClearCollectedCampaignsRequest) GetCampaignId() string {
	if x != nil {
		return x.CampaignId
	}
	return ""
}

type GetCollectedCampaignsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameSlug string `protobuf:"bytes,1,opt,name=gameSlug,proto3" json:"gameSlug,omitempty"`
}

func (x *GetCollectedCampaignsRequest) Reset() {
	*x = GetCollectedCampaignsRequest{}
	mi := &file_drops_drops_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCollectedCampaignsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectedCampaignsRequest) ProtoMessage() {}

func (x *GetCollectedCampaignsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectedCampaignsRequest.ProtoReflect.Descriptor instead.
func (*GetCollectedCampaignsRequest) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{9}
}

func (x *GetCollectedCampaignsRequest) GetGameSlug() string {
	if x != nil {
		return x.GameSlug
	}
	return ""
}

type UpdateMarketplaceOfferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldName string            `protobuf:"bytes,1,opt,name=oldName,proto3" json:"oldName,omitempty"`
	Offer   *MarketPlaceOffer `protobuf:"bytes,2,opt,name=offer,proto3" json:"offer,omitempty"`
}

func (x *UpdateMarketplaceOfferRequest) Reset() {
	*x = UpdateMarketplaceOfferRequest{}
	mi := &file_drops_drops_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMarketplaceOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketplaceOfferRequest) ProtoMessage() {}

func (x *UpdateMarketplaceOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketplaceOfferRequest.ProtoReflect.Descriptor instead.
func (*UpdateMarketplaceOfferRequest) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateMarketplaceOfferRequest) GetOldName() string {
	if x != nil {
		return x.OldName
	}
	return ""
}

func (x *UpdateMarketplaceOfferRequest) GetOffer() *MarketPlaceOffer {
	if x != nil {
		return x.Offer
	}
	return nil
}

type DeleteMarketplaceOfferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteMarketplaceOfferRequest) Reset() {
	*x = DeleteMarketplaceOfferRequest{}
	mi := &file_drops_drops_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMarketplaceOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMarketplaceOfferRequest) ProtoMessage() {}

func (x *DeleteMarketplaceOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMarketplaceOfferRequest.ProtoReflect.Descriptor instead.
func (*DeleteMarketplaceOfferRequest) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteMarketplaceOfferRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateGameFarmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Game string `protobuf:"bytes,1,opt,name=game,proto3" json:"game,omitempty"`
	Farm bool   `protobuf:"varint,2,opt,name=farm,proto3" json:"farm,omitempty"`
}

func (x *UpdateGameFarmRequest) Reset() {
	*x = UpdateGameFarmRequest{}
	mi := &file_drops_drops_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGameFarmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGameFarmRequest) ProtoMessage() {}

func (x *UpdateGameFarmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGameFarmRequest.ProtoReflect.Descriptor instead.
func (*UpdateGameFarmRequest) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateGameFarmRequest) GetGame() string {
	if x != nil {
		return x.Game
	}
	return ""
}

func (x *UpdateGameFarmRequest) GetFarm() bool {
	if x != nil {
		return x.Farm
	}
	return false
}

type CreateMarketplaceOfferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfferType string `protobuf:"bytes,1,opt,name=offerType,proto3" json:"offerType,omitempty"`
}

func (x *CreateMarketplaceOfferRequest) Reset() {
	*x = CreateMarketplaceOfferRequest{}
	mi := &file_drops_drops_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMarketplaceOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMarketplaceOfferRequest) ProtoMessage() {}

func (x *CreateMarketplaceOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMarketplaceOfferRequest.ProtoReflect.Descriptor instead.
func (*CreateMarketplaceOfferRequest) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{13}
}

func (x *CreateMarketplaceOfferRequest) GetOfferType() string {
	if x != nil {
		return x.OfferType
	}
	return ""
}

type GetMarketplaceOffersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Search     string `protobuf:"bytes,1,opt,name=search,proto3" json:"search,omitempty"`
	OffersType string `protobuf:"bytes,2,opt,name=offersType,proto3" json:"offersType,omitempty"`
	Limit      int64  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Page       int64  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetMarketplaceOffersRequest) Reset() {
	*x = GetMarketplaceOffersRequest{}
	mi := &file_drops_drops_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMarketplaceOffersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketplaceOffersRequest) ProtoMessage() {}

func (x *GetMarketplaceOffersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketplaceOffersRequest.ProtoReflect.Descriptor instead.
func (*GetMarketplaceOffersRequest) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{14}
}

func (x *GetMarketplaceOffersRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetMarketplaceOffersRequest) GetOffersType() string {
	if x != nil {
		return x.OffersType
	}
	return ""
}

func (x *GetMarketplaceOffersRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetMarketplaceOffersRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetMarketplaceOffersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offers   []*MarketPlaceOffer `protobuf:"bytes,1,rep,name=offers,proto3" json:"offers,omitempty"`
	Quantity int64               `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *GetMarketplaceOffersResponse) Reset() {
	*x = GetMarketplaceOffersResponse{}
	mi := &file_drops_drops_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMarketplaceOffersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketplaceOffersResponse) ProtoMessage() {}

func (x *GetMarketplaceOffersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketplaceOffersResponse.ProtoReflect.Descriptor instead.
func (*GetMarketplaceOffersResponse) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{15}
}

func (x *GetMarketplaceOffersResponse) GetOffers() []*MarketPlaceOffer {
	if x != nil {
		return x.Offers
	}
	return nil
}

func (x *GetMarketplaceOffersResponse) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type MarketPlaceOffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type     string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	FarmTime int64  `protobuf:"varint,3,opt,name=farmTime,proto3" json:"farmTime,omitempty"`
	GroupID  int64  `protobuf:"varint,4,opt,name=groupID,proto3" json:"groupID,omitempty"`
}

func (x *MarketPlaceOffer) Reset() {
	*x = MarketPlaceOffer{}
	mi := &file_drops_drops_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketPlaceOffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketPlaceOffer) ProtoMessage() {}

func (x *MarketPlaceOffer) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketPlaceOffer.ProtoReflect.Descriptor instead.
func (*MarketPlaceOffer) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{16}
}

func (x *MarketPlaceOffer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MarketPlaceOffer) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MarketPlaceOffer) GetFarmTime() int64 {
	if x != nil {
		return x.FarmTime
	}
	return 0
}

func (x *MarketPlaceOffer) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

type ConnectAccountsWithGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Game             string `protobuf:"bytes,1,opt,name=game,proto3" json:"game,omitempty"`
	AccountsQuantity int64  `protobuf:"varint,2,opt,name=accountsQuantity,proto3" json:"accountsQuantity,omitempty"`
}

func (x *ConnectAccountsWithGameRequest) Reset() {
	*x = ConnectAccountsWithGameRequest{}
	mi := &file_drops_drops_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectAccountsWithGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectAccountsWithGameRequest) ProtoMessage() {}

func (x *ConnectAccountsWithGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectAccountsWithGameRequest.ProtoReflect.Descriptor instead.
func (*ConnectAccountsWithGameRequest) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{17}
}

func (x *ConnectAccountsWithGameRequest) GetGame() string {
	if x != nil {
		return x.Game
	}
	return ""
}

func (x *ConnectAccountsWithGameRequest) GetAccountsQuantity() int64 {
	if x != nil {
		return x.AccountsQuantity
	}
	return 0
}

type AccountWithDrops struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbId  int64            `protobuf:"varint,1,opt,name=dbId,proto3" json:"dbId,omitempty"`
	Drops map[string]int64 `protobuf:"bytes,2,rep,name=drops,proto3" json:"drops,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *AccountWithDrops) Reset() {
	*x = AccountWithDrops{}
	mi := &file_drops_drops_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountWithDrops) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountWithDrops) ProtoMessage() {}

func (x *AccountWithDrops) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountWithDrops.ProtoReflect.Descriptor instead.
func (*AccountWithDrops) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{18}
}

func (x *AccountWithDrops) GetDbId() int64 {
	if x != nil {
		return x.DbId
	}
	return 0
}

func (x *AccountWithDrops) GetDrops() map[string]int64 {
	if x != nil {
		return x.Drops
	}
	return nil
}

type SaveAccountsInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts []*AccountWithDrops `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
}

func (x *SaveAccountsInfoRequest) Reset() {
	*x = SaveAccountsInfoRequest{}
	mi := &file_drops_drops_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveAccountsInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveAccountsInfoRequest) ProtoMessage() {}

func (x *SaveAccountsInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveAccountsInfoRequest.ProtoReflect.Descriptor instead.
func (*SaveAccountsInfoRequest) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{19}
}

func (x *SaveAccountsInfoRequest) GetAccounts() []*AccountWithDrops {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type UpdateAccountsInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Game string `protobuf:"bytes,1,opt,name=game,proto3" json:"game,omitempty"`
}

func (x *UpdateAccountsInfoRequest) Reset() {
	*x = UpdateAccountsInfoRequest{}
	mi := &file_drops_drops_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAccountsInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountsInfoRequest) ProtoMessage() {}

func (x *UpdateAccountsInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountsInfoRequest.ProtoReflect.Descriptor instead.
func (*UpdateAccountsInfoRequest) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateAccountsInfoRequest) GetGame() string {
	if x != nil {
		return x.Game
	}
	return ""
}

type DeletePreOrderedAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Game string `protobuf:"bytes,1,opt,name=game,proto3" json:"game,omitempty"`
}

func (x *DeletePreOrderedAccountsRequest) Reset() {
	*x = DeletePreOrderedAccountsRequest{}
	mi := &file_drops_drops_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePreOrderedAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePreOrderedAccountsRequest) ProtoMessage() {}

func (x *DeletePreOrderedAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePreOrderedAccountsRequest.ProtoReflect.Descriptor instead.
func (*DeletePreOrderedAccountsRequest) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{21}
}

func (x *DeletePreOrderedAccountsRequest) GetGame() string {
	if x != nil {
		return x.Game
	}
	return ""
}

type DeleteAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username             string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	DontDeletePreOrdered bool   `protobuf:"varint,2,opt,name=dontDeletePreOrdered,proto3" json:"dontDeletePreOrdered,omitempty"`
}

func (x *DeleteAccountRequest) Reset() {
	*x = DeleteAccountRequest{}
	mi := &file_drops_drops_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountRequest) ProtoMessage() {}

func (x *DeleteAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountRequest.ProtoReflect.Descriptor instead.
func (*DeleteAccountRequest) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteAccountRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *DeleteAccountRequest) GetDontDeletePreOrdered() bool {
	if x != nil {
		return x.DontDeletePreOrdered
	}
	return false
}

type MovePreOrderAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *MovePreOrderAccountRequest) Reset() {
	*x = MovePreOrderAccountRequest{}
	mi := &file_drops_drops_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MovePreOrderAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovePreOrderAccountRequest) ProtoMessage() {}

func (x *MovePreOrderAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovePreOrderAccountRequest.ProtoReflect.Descriptor instead.
func (*MovePreOrderAccountRequest) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{23}
}

func (x *MovePreOrderAccountRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type SetEndTimeForAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Duration int64  `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *SetEndTimeForAccountRequest) Reset() {
	*x = SetEndTimeForAccountRequest{}
	mi := &file_drops_drops_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetEndTimeForAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEndTimeForAccountRequest) ProtoMessage() {}

func (x *SetEndTimeForAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEndTimeForAccountRequest.ProtoReflect.Descriptor instead.
func (*SetEndTimeForAccountRequest) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{24}
}

func (x *SetEndTimeForAccountRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SetEndTimeForAccountRequest) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type GetAllGameNamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Games []string `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty"`
}

func (x *GetAllGameNamesResponse) Reset() {
	*x = GetAllGameNamesResponse{}
	mi := &file_drops_drops_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllGameNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGameNamesResponse) ProtoMessage() {}

func (x *GetAllGameNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGameNamesResponse.ProtoReflect.Descriptor instead.
func (*GetAllGameNamesResponse) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{25}
}

func (x *GetAllGameNamesResponse) GetGames() []string {
	if x != nil {
		return x.Games
	}
	return nil
}

type UpdateGameChannelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Game     string   `protobuf:"bytes,1,opt,name=game,proto3" json:"game,omitempty"`
	Channels []string `protobuf:"bytes,2,rep,name=channels,proto3" json:"channels,omitempty"`
}

func (x *UpdateGameChannelsRequest) Reset() {
	*x = UpdateGameChannelsRequest{}
	mi := &file_drops_drops_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGameChannelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGameChannelsRequest) ProtoMessage() {}

func (x *UpdateGameChannelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGameChannelsRequest.ProtoReflect.Descriptor instead.
func (*UpdateGameChannelsRequest) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateGameChannelsRequest) GetGame() string {
	if x != nil {
		return x.Game
	}
	return ""
}

func (x *UpdateGameChannelsRequest) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

type GetGamesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetGamesRequest) Reset() {
	*x = GetGamesRequest{}
	mi := &file_drops_drops_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGamesRequest) ProtoMessage() {}

func (x *GetGamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGamesRequest.ProtoReflect.Descriptor instead.
func (*GetGamesRequest) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{27}
}

func (x *GetGamesRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetGamesRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetGamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Games          []*Game `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty"`
	TotalGameCount int64   `protobuf:"varint,2,opt,name=totalGameCount,proto3" json:"totalGameCount,omitempty"`
}

func (x *GetGamesResponse) Reset() {
	*x = GetGamesResponse{}
	mi := &file_drops_drops_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGamesResponse) ProtoMessage() {}

func (x *GetGamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGamesResponse.ProtoReflect.Descriptor instead.
func (*GetGamesResponse) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{28}
}

func (x *GetGamesResponse) GetGames() []*Game {
	if x != nil {
		return x.Games
	}
	return nil
}

func (x *GetGamesResponse) GetTotalGameCount() int64 {
	if x != nil {
		return x.TotalGameCount
	}
	return 0
}

type Game struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Slug     string   `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	Channels []string `protobuf:"bytes,3,rep,name=channels,proto3" json:"channels,omitempty"`
	Farm     bool     `protobuf:"varint,4,opt,name=farm,proto3" json:"farm,omitempty"`
}

func (x *Game) Reset() {
	*x = Game{}
	mi := &file_drops_drops_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Game) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Game) ProtoMessage() {}

func (x *Game) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Game.ProtoReflect.Descriptor instead.
func (*Game) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{29}
}

func (x *Game) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Game) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *Game) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *Game) GetFarm() bool {
	if x != nil {
		return x.Farm
	}
	return false
}

type GetAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page           int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Game           string `protobuf:"bytes,2,opt,name=game,proto3" json:"game,omitempty"`
	Limit          int64  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Search         string `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	OnlyPreOrdered bool   `protobuf:"varint,5,opt,name=onlyPreOrdered,proto3" json:"onlyPreOrdered,omitempty"`
}

func (x *GetAccountsRequest) Reset() {
	*x = GetAccountsRequest{}
	mi := &file_drops_drops_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountsRequest) ProtoMessage() {}

func (x *GetAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountsRequest.ProtoReflect.Descriptor instead.
func (*GetAccountsRequest) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{30}
}

func (x *GetAccountsRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAccountsRequest) GetGame() string {
	if x != nil {
		return x.Game
	}
	return ""
}

func (x *GetAccountsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAccountsRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetAccountsRequest) GetOnlyPreOrdered() bool {
	if x != nil {
		return x.OnlyPreOrdered
	}
	return false
}

type GetAccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts       []*AccountWithData `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	TotalGameCount int64              `protobuf:"varint,2,opt,name=totalGameCount,proto3" json:"totalGameCount,omitempty"`
}

func (x *GetAccountsResponse) Reset() {
	*x = GetAccountsResponse{}
	mi := &file_drops_drops_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountsResponse) ProtoMessage() {}

func (x *GetAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountsResponse.ProtoReflect.Descriptor instead.
func (*GetAccountsResponse) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{31}
}

func (x *GetAccountsResponse) GetAccounts() []*AccountWithData {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *GetAccountsResponse) GetTotalGameCount() int64 {
	if x != nil {
		return x.TotalGameCount
	}
	return 0
}

type UpdateAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens []string `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
	Drops  []string `protobuf:"bytes,2,rep,name=drops,proto3" json:"drops,omitempty"`
}

func (x *UpdateAccountsRequest) Reset() {
	*x = UpdateAccountsRequest{}
	mi := &file_drops_drops_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountsRequest) ProtoMessage() {}

func (x *UpdateAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountsRequest.ProtoReflect.Descriptor instead.
func (*UpdateAccountsRequest) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateAccountsRequest) GetTokens() []string {
	if x != nil {
		return x.Tokens
	}
	return nil
}

func (x *UpdateAccountsRequest) GetDrops() []string {
	if x != nil {
		return x.Drops
	}
	return nil
}

type AddGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Game             string `protobuf:"bytes,1,opt,name=game,proto3" json:"game,omitempty"`
	Slug             string `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	AccountsQuantity int64  `protobuf:"varint,3,opt,name=accountsQuantity,proto3" json:"accountsQuantity,omitempty"`
}

func (x *AddGameRequest) Reset() {
	*x = AddGameRequest{}
	mi := &file_drops_drops_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGameRequest) ProtoMessage() {}

func (x *AddGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGameRequest.ProtoReflect.Descriptor instead.
func (*AddGameRequest) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{33}
}

func (x *AddGameRequest) GetGame() string {
	if x != nil {
		return x.Game
	}
	return ""
}

func (x *AddGameRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *AddGameRequest) GetAccountsQuantity() int64 {
	if x != nil {
		return x.AccountsQuantity
	}
	return 0
}

type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Oauth    string `protobuf:"bytes,3,opt,name=oauth,proto3" json:"oauth,omitempty"`
	DbId     int64  `protobuf:"varint,4,opt,name=dbId,proto3" json:"dbId,omitempty"`
}

func (x *Token) Reset() {
	*x = Token{}
	mi := &file_drops_drops_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{34}
}

func (x *Token) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Token) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Token) GetOauth() string {
	if x != nil {
		return x.Oauth
	}
	return ""
}

func (x *Token) GetDbId() int64 {
	if x != nil {
		return x.DbId
	}
	return 0
}

type GetTokensForGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug string `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
}

func (x *GetTokensForGameRequest) Reset() {
	*x = GetTokensForGameRequest{}
	mi := &file_drops_drops_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokensForGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokensForGameRequest) ProtoMessage() {}

func (x *GetTokensForGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokensForGameRequest.ProtoReflect.Descriptor instead.
func (*GetTokensForGameRequest) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{35}
}

func (x *GetTokensForGameRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type GetTokensForGameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens []string `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *GetTokensForGameResponse) Reset() {
	*x = GetTokensForGameResponse{}
	mi := &file_drops_drops_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokensForGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokensForGameResponse) ProtoMessage() {}

func (x *GetTokensForGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokensForGameResponse.ProtoReflect.Descriptor instead.
func (*GetTokensForGameResponse) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{36}
}

func (x *GetTokensForGameResponse) GetTokens() []string {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type AccountWithData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token        *Token                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Drops        []string               `protobuf:"bytes,2,rep,name=drops,proto3" json:"drops,omitempty"`
	Game         string                 `protobuf:"bytes,3,opt,name=game,proto3" json:"game,omitempty"`
	Id           int64                  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	IsPreOrdered bool                   `protobuf:"varint,5,opt,name=isPreOrdered,proto3" json:"isPreOrdered,omitempty"`
	EndFarm      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=endFarm,proto3" json:"endFarm,omitempty"`
}

func (x *AccountWithData) Reset() {
	*x = AccountWithData{}
	mi := &file_drops_drops_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountWithData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountWithData) ProtoMessage() {}

func (x *AccountWithData) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountWithData.ProtoReflect.Descriptor instead.
func (*AccountWithData) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{37}
}

func (x *AccountWithData) GetToken() *Token {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *AccountWithData) GetDrops() []string {
	if x != nil {
		return x.Drops
	}
	return nil
}

func (x *AccountWithData) GetGame() string {
	if x != nil {
		return x.Game
	}
	return ""
}

func (x *AccountWithData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountWithData) GetIsPreOrdered() bool {
	if x != nil {
		return x.IsPreOrdered
	}
	return false
}

func (x *AccountWithData) GetEndFarm() *timestamppb.Timestamp {
	if x != nil {
		return x.EndFarm
	}
	return nil
}

type AddAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts []*Token `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
}

func (x *AddAccountsRequest) Reset() {
	*x = AddAccountsRequest{}
	mi := &file_drops_drops_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAccountsRequest) ProtoMessage() {}

func (x *AddAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drops_drops_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAccountsRequest.ProtoReflect.Descriptor instead.
func (*AddAccountsRequest) Descriptor() ([]byte, []int) {
	return file_drops_drops_proto_rawDescGZIP(), []int{38}
}

func (x *AddAccountsRequest) GetAccounts() []*Token {
	if x != nil {
		return x.Accounts
	}
	return nil
}

var File_drops_drops_proto protoreflect.FileDescriptor

var file_drops_drops_proto_rawDesc = []byte{
	0x0a, 0x11, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2f, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x45, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22,
	0x2a, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x70, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x43, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x67, 0x61, 0x6d,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73,
	0x22, 0xc6, 0x01, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a,
	0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x6c,
	0x65, 0x66, 0x74, 0x54, 0x6f, 0x57, 0x61, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x6c, 0x65, 0x66, 0x74, 0x54, 0x6f, 0x57, 0x61, 0x74, 0x63, 0x68, 0x12, 0x22, 0x0a,
	0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x22, 0x4a, 0x0a, 0x1e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x08, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x42, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x61, 0x72, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29,
	0x0a, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x46, 0x61, 0x72, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x52, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x66, 0x0a, 0x0c, 0x46, 0x61, 0x72,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x61, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x66, 0x61, 0x72,
	0x6d, 0x22, 0x3d, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73,
	0x22, 0x5c, 0x0a, 0x1e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x6c, 0x75, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x22, 0x3a,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x6c, 0x75, 0x67, 0x22, 0x68, 0x0a, 0x1d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f,
	0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x6c,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x05, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x22, 0x33, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3f, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x72, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x66, 0x61, 0x72, 0x6d, 0x22, 0x3d, 0x0a, 0x1d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f,
	0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6f, 0x66, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x7f, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x6b, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x72, 0x6f,
	0x70, 0x73, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x70, 0x0a, 0x10, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x72, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x61, 0x72, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x22, 0x60, 0x0a, 0x1e, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x67,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x12,
	0x2a, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x51, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x9a, 0x01, 0x0a, 0x10,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x62, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x64, 0x62, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x05, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x44, 0x72, 0x6f,
	0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x1a, 0x38,
	0x0a, 0x0a, 0x44, 0x72, 0x6f, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4e, 0x0a, 0x17, 0x53, 0x61, 0x76, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x6f, 0x70, 0x73, 0x52, 0x08,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x2f, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x22, 0x35, 0x0a, 0x1f, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x67, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65,
	0x22, 0x66, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x64, 0x6f, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x72, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x14, 0x64, 0x6f, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x22, 0x38, 0x0a, 0x1a, 0x4d, 0x6f, 0x76, 0x65,
	0x50, 0x72, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x55, 0x0a, 0x1b, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x46, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2f, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x4b, 0x0a, 0x19, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x22, 0x3b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x22, 0x5d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x67, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x5e, 0x0a, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x6c, 0x75, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x61, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x66,
	0x61, 0x72, 0x6d, 0x22, 0x92, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x6e, 0x6c, 0x79, 0x50, 0x72, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6f, 0x6e, 0x6c, 0x79, 0x50, 0x72,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x22, 0x71, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x32, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x57, 0x69, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x61, 0x6d, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x45, 0x0a, 0x15, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x64, 0x72, 0x6f, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x72, 0x6f,
	0x70, 0x73, 0x22, 0x64, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x2a, 0x0a, 0x10,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x69, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x61, 0x75,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x62, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64,
	0x62, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x46, 0x6f, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c,
	0x75, 0x67, 0x22, 0x32, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x46,
	0x6f, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0xc9, 0x01, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x72, 0x6f, 0x70,
	0x73, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64,
	0x72, 0x6f, 0x70, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x50, 0x72,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x69, 0x73, 0x50, 0x72, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x46, 0x61, 0x72, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x46, 0x61,
	0x72, 0x6d, 0x22, 0x3e, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x72, 0x6f,
	0x70, 0x73, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x32, 0x8c, 0x01, 0x0a, 0x0c, 0x44, 0x72, 0x6f, 0x70, 0x73, 0x56, 0x69, 0x65, 0x77,
	0x65, 0x72, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x12, 0x18, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x3c, 0x0a, 0x09, 0x53, 0x74, 0x6f, 0x70, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x12, 0x17, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x32, 0xb3, 0x03, 0x0a, 0x05, 0x44, 0x72, 0x6f, 0x70, 0x73, 0x12, 0x4f, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x64, 0x72, 0x6f, 0x70,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x12,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x25, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x72, 0x6f, 0x70, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x46, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x72, 0x6d, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x61, 0x72, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x58, 0x0a, 0x17, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x73, 0x12, 0x25, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x62, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x12, 0x23, 0x2e, 0x64,
	0x72, 0x6f, 0x70, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xf5, 0x0c, 0x0a, 0x0b, 0x44, 0x72, 0x6f, 0x70,
	0x73, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x58, 0x0a, 0x17, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x47, 0x61,
	0x6d, 0x65, 0x12, 0x25, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x47, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x40, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x72, 0x6d, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x07, 0x41,
	0x64, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x41,
	0x64, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x41, 0x64, 0x64,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3b, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x64, 0x72,
	0x6f, 0x70, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73,
	0x12, 0x20, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47,
	0x61, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x0e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x61, 0x72, 0x6d, 0x12, 0x1c, 0x2e, 0x64,
	0x72, 0x6f, 0x70, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x46,
	0x61, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x49, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x6d, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e,
	0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x6d, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a,
	0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b,
	0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x50, 0x0a, 0x13, 0x4d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x64, 0x72, 0x6f,
	0x70, 0x73, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x52, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x2e,
	0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x46, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5a, 0x0a, 0x18, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4e, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x2e, 0x64, 0x72,
	0x6f, 0x70, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x10, 0x53, 0x61, 0x76, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e, 0x64, 0x72, 0x6f, 0x70,
	0x73, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x53, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x46, 0x6f,
	0x72, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x12, 0x22,
	0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x12, 0x24, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x56, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x64, 0x72, 0x6f, 0x70,
	0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x56, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x12, 0x24, 0x2e, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42,
	0x1d, 0x5a, 0x1b, 0x67, 0x6f, 0x73, 0x6d, 0x61, 0x63, 0x68, 0x31, 0x6e, 0x65, 0x2e, 0x64, 0x72,
	0x6f, 0x70, 0x73, 0x2e, 0x76, 0x31, 0x3b, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_drops_drops_proto_rawDescOnce sync.Once
	file_drops_drops_proto_rawDescData = file_drops_drops_proto_rawDesc
)

func file_drops_drops_proto_rawDescGZIP() []byte {
	file_drops_drops_proto_rawDescOnce.Do(func() {
		file_drops_drops_proto_rawDescData = protoimpl.X.CompressGZIP(file_drops_drops_proto_rawDescData)
	})
	return file_drops_drops_proto_rawDescData
}

var file_drops_drops_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_drops_drops_proto_goTypes = []any{
	(*StartWatchRequest)(nil),               // 0: drops.StartWatchRequest
	(*StopWatchRequest)(nil),                // 1: drops.StopWatchRequest
	(*GetActiveGamesInfoResponse)(nil),      // 2: drops.GetActiveGamesInfoResponse
	(*GameInfo)(nil),                        // 3: drops.GameInfo
	(*UpdateDropsAccountsInfoRequest)(nil),  // 4: drops.UpdateDropsAccountsInfoRequest
	(*UpdateFarmListRequest)(nil),           // 5: drops.UpdateFarmListRequest
	(*FarmListGame)(nil),                    // 6: drops.FarmListGame
	(*GetCollectedCampaignsResponse)(nil),   // 7: drops.GetCollectedCampaignsResponse
	(*ClearCollectedCampaignsRequest)(nil),  // 8: drops.ClearCollectedCampaignsRequest
	(*GetCollectedCampaignsRequest)(nil),    // 9: drops.GetCollectedCampaignsRequest
	(*UpdateMarketplaceOfferRequest)(nil),   // 10: drops.UpdateMarketplaceOfferRequest
	(*DeleteMarketplaceOfferRequest)(nil),   // 11: drops.DeleteMarketplaceOfferRequest
	(*UpdateGameFarmRequest)(nil),           // 12: drops.UpdateGameFarmRequest
	(*CreateMarketplaceOfferRequest)(nil),   // 13: drops.CreateMarketplaceOfferRequest
	(*GetMarketplaceOffersRequest)(nil),     // 14: drops.GetMarketplaceOffersRequest
	(*GetMarketplaceOffersResponse)(nil),    // 15: drops.GetMarketplaceOffersResponse
	(*MarketPlaceOffer)(nil),                // 16: drops.MarketPlaceOffer
	(*ConnectAccountsWithGameRequest)(nil),  // 17: drops.ConnectAccountsWithGameRequest
	(*AccountWithDrops)(nil),                // 18: drops.AccountWithDrops
	(*SaveAccountsInfoRequest)(nil),         // 19: drops.SaveAccountsInfoRequest
	(*UpdateAccountsInfoRequest)(nil),       // 20: drops.UpdateAccountsInfoRequest
	(*DeletePreOrderedAccountsRequest)(nil), // 21: drops.DeletePreOrderedAccountsRequest
	(*DeleteAccountRequest)(nil),            // 22: drops.DeleteAccountRequest
	(*MovePreOrderAccountRequest)(nil),      // 23: drops.MovePreOrderAccountRequest
	(*SetEndTimeForAccountRequest)(nil),     // 24: drops.SetEndTimeForAccountRequest
	(*GetAllGameNamesResponse)(nil),         // 25: drops.GetAllGameNamesResponse
	(*UpdateGameChannelsRequest)(nil),       // 26: drops.UpdateGameChannelsRequest
	(*GetGamesRequest)(nil),                 // 27: drops.GetGamesRequest
	(*GetGamesResponse)(nil),                // 28: drops.GetGamesResponse
	(*Game)(nil),                            // 29: drops.Game
	(*GetAccountsRequest)(nil),              // 30: drops.GetAccountsRequest
	(*GetAccountsResponse)(nil),             // 31: drops.GetAccountsResponse
	(*UpdateAccountsRequest)(nil),           // 32: drops.UpdateAccountsRequest
	(*AddGameRequest)(nil),                  // 33: drops.AddGameRequest
	(*Token)(nil),                           // 34: drops.Token
	(*GetTokensForGameRequest)(nil),         // 35: drops.GetTokensForGameRequest
	(*GetTokensForGameResponse)(nil),        // 36: drops.GetTokensForGameResponse
	(*AccountWithData)(nil),                 // 37: drops.AccountWithData
	(*AddAccountsRequest)(nil),              // 38: drops.AddAccountsRequest
	nil,                                     // 39: drops.AccountWithDrops.DropsEntry
	(*timestamppb.Timestamp)(nil),           // 40: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                   // 41: google.protobuf.Empty
}
var file_drops_drops_proto_depIdxs = []int32{
	3,  // 0: drops.GetActiveGamesInfoResponse.games:type_name -> drops.GameInfo
	34, // 1: drops.UpdateDropsAccountsInfoRequest.accounts:type_name -> drops.Token
	6,  // 2: drops.UpdateFarmListRequest.games:type_name -> drops.FarmListGame
	16, // 3: drops.UpdateMarketplaceOfferRequest.offer:type_name -> drops.MarketPlaceOffer
	16, // 4: drops.GetMarketplaceOffersResponse.offers:type_name -> drops.MarketPlaceOffer
	39, // 5: drops.AccountWithDrops.drops:type_name -> drops.AccountWithDrops.DropsEntry
	18, // 6: drops.SaveAccountsInfoRequest.accounts:type_name -> drops.AccountWithDrops
	29, // 7: drops.GetGamesResponse.games:type_name -> drops.Game
	37, // 8: drops.GetAccountsResponse.accounts:type_name -> drops.AccountWithData
	34, // 9: drops.AccountWithData.token:type_name -> drops.Token
	40, // 10: drops.AccountWithData.endFarm:type_name -> google.protobuf.Timestamp
	34, // 11: drops.AddAccountsRequest.accounts:type_name -> drops.Token
	0,  // 12: drops.DropsViewers.StartWatch:input_type -> drops.StartWatchRequest
	1,  // 13: drops.DropsViewers.StopWatch:input_type -> drops.StopWatchRequest
	41, // 14: drops.Drops.GetActiveGamesInfo:input_type -> google.protobuf.Empty
	4,  // 15: drops.Drops.UpdateAccountsInfo:input_type -> drops.UpdateDropsAccountsInfoRequest
	5,  // 16: drops.Drops.UpdateFarmList:input_type -> drops.UpdateFarmListRequest
	8,  // 17: drops.Drops.ClearCollectedCampaigns:input_type -> drops.ClearCollectedCampaignsRequest
	9,  // 18: drops.Drops.GetCollectedCampaigns:input_type -> drops.GetCollectedCampaignsRequest
	17, // 19: drops.DropsCenter.ConnectAccountsWithGame:input_type -> drops.ConnectAccountsWithGameRequest
	41, // 20: drops.DropsCenter.UpdateFarmList:input_type -> google.protobuf.Empty
	32, // 21: drops.DropsCenter.UpdateAccounts:input_type -> drops.UpdateAccountsRequest
	33, // 22: drops.DropsCenter.AddGame:input_type -> drops.AddGameRequest
	38, // 23: drops.DropsCenter.AddAccounts:input_type -> drops.AddAccountsRequest
	27, // 24: drops.DropsCenter.GetGames:input_type -> drops.GetGamesRequest
	30, // 25: drops.DropsCenter.GetAccounts:input_type -> drops.GetAccountsRequest
	26, // 26: drops.DropsCenter.UpdateGameChannels:input_type -> drops.UpdateGameChannelsRequest
	12, // 27: drops.DropsCenter.UpdateGameFarm:input_type -> drops.UpdateGameFarmRequest
	41, // 28: drops.DropsCenter.GetAllGameNames:input_type -> google.protobuf.Empty
	22, // 29: drops.DropsCenter.DeleteAccount:input_type -> drops.DeleteAccountRequest
	23, // 30: drops.DropsCenter.MovePreOrderAccount:input_type -> drops.MovePreOrderAccountRequest
	24, // 31: drops.DropsCenter.SetEndTimeForAccount:input_type -> drops.SetEndTimeForAccountRequest
	21, // 32: drops.DropsCenter.DeletePreOrderedAccounts:input_type -> drops.DeletePreOrderedAccountsRequest
	20, // 33: drops.DropsCenter.UpdateAccountsInfo:input_type -> drops.UpdateAccountsInfoRequest
	19, // 34: drops.DropsCenter.SaveAccountsInfo:input_type -> drops.SaveAccountsInfoRequest
	35, // 35: drops.DropsCenter.GetTokensForGame:input_type -> drops.GetTokensForGameRequest
	14, // 36: drops.DropsCenter.GetMarketplaceOffers:input_type -> drops.GetMarketplaceOffersRequest
	10, // 37: drops.DropsCenter.UpdateMarketplaceOffer:input_type -> drops.UpdateMarketplaceOfferRequest
	11, // 38: drops.DropsCenter.DeleteMarketplaceOffer:input_type -> drops.DeleteMarketplaceOfferRequest
	13, // 39: drops.DropsCenter.CreateMarketplaceOffer:input_type -> drops.CreateMarketplaceOfferRequest
	41, // 40: drops.DropsViewers.StartWatch:output_type -> google.protobuf.Empty
	41, // 41: drops.DropsViewers.StopWatch:output_type -> google.protobuf.Empty
	2,  // 42: drops.Drops.GetActiveGamesInfo:output_type -> drops.GetActiveGamesInfoResponse
	41, // 43: drops.Drops.UpdateAccountsInfo:output_type -> google.protobuf.Empty
	41, // 44: drops.Drops.UpdateFarmList:output_type -> google.protobuf.Empty
	41, // 45: drops.Drops.ClearCollectedCampaigns:output_type -> google.protobuf.Empty
	7,  // 46: drops.Drops.GetCollectedCampaigns:output_type -> drops.GetCollectedCampaignsResponse
	41, // 47: drops.DropsCenter.ConnectAccountsWithGame:output_type -> google.protobuf.Empty
	41, // 48: drops.DropsCenter.UpdateFarmList:output_type -> google.protobuf.Empty
	41, // 49: drops.DropsCenter.UpdateAccounts:output_type -> google.protobuf.Empty
	41, // 50: drops.DropsCenter.AddGame:output_type -> google.protobuf.Empty
	41, // 51: drops.DropsCenter.AddAccounts:output_type -> google.protobuf.Empty
	28, // 52: drops.DropsCenter.GetGames:output_type -> drops.GetGamesResponse
	31, // 53: drops.DropsCenter.GetAccounts:output_type -> drops.GetAccountsResponse
	41, // 54: drops.DropsCenter.UpdateGameChannels:output_type -> google.protobuf.Empty
	41, // 55: drops.DropsCenter.UpdateGameFarm:output_type -> google.protobuf.Empty
	25, // 56: drops.DropsCenter.GetAllGameNames:output_type -> drops.GetAllGameNamesResponse
	41, // 57: drops.DropsCenter.DeleteAccount:output_type -> google.protobuf.Empty
	41, // 58: drops.DropsCenter.MovePreOrderAccount:output_type -> google.protobuf.Empty
	41, // 59: drops.DropsCenter.SetEndTimeForAccount:output_type -> google.protobuf.Empty
	41, // 60: drops.DropsCenter.DeletePreOrderedAccounts:output_type -> google.protobuf.Empty
	41, // 61: drops.DropsCenter.UpdateAccountsInfo:output_type -> google.protobuf.Empty
	41, // 62: drops.DropsCenter.SaveAccountsInfo:output_type -> google.protobuf.Empty
	36, // 63: drops.DropsCenter.GetTokensForGame:output_type -> drops.GetTokensForGameResponse
	15, // 64: drops.DropsCenter.GetMarketplaceOffers:output_type -> drops.GetMarketplaceOffersResponse
	41, // 65: drops.DropsCenter.UpdateMarketplaceOffer:output_type -> google.protobuf.Empty
	41, // 66: drops.DropsCenter.DeleteMarketplaceOffer:output_type -> google.protobuf.Empty
	41, // 67: drops.DropsCenter.CreateMarketplaceOffer:output_type -> google.protobuf.Empty
	40, // [40:68] is the sub-list for method output_type
	12, // [12:40] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_drops_drops_proto_init() }
func file_drops_drops_proto_init() {
	if File_drops_drops_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_drops_drops_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_drops_drops_proto_goTypes,
		DependencyIndexes: file_drops_drops_proto_depIdxs,
		MessageInfos:      file_drops_drops_proto_msgTypes,
	}.Build()
	File_drops_drops_proto = out.File
	file_drops_drops_proto_rawDesc = nil
	file_drops_drops_proto_goTypes = nil
	file_drops_drops_proto_depIdxs = nil
}
