// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.1
// source: gosboost/gosboost.proto

package gosboostv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCompletePercentageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Percentage float32 `protobuf:"fixed32,1,opt,name=percentage,proto3" json:"percentage,omitempty"`
}

func (x *GetCompletePercentageResponse) Reset() {
	*x = GetCompletePercentageResponse{}
	mi := &file_gosboost_gosboost_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCompletePercentageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompletePercentageResponse) ProtoMessage() {}

func (x *GetCompletePercentageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gosboost_gosboost_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompletePercentageResponse.ProtoReflect.Descriptor instead.
func (*GetCompletePercentageResponse) Descriptor() ([]byte, []int) {
	return file_gosboost_gosboost_proto_rawDescGZIP(), []int{0}
}

func (x *GetCompletePercentageResponse) GetPercentage() float32 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

type AppendOperationCompletedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Completed uint64 `protobuf:"varint,2,opt,name=completed,proto3" json:"completed,omitempty"`
}

func (x *AppendOperationCompletedRequest) Reset() {
	*x = AppendOperationCompletedRequest{}
	mi := &file_gosboost_gosboost_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendOperationCompletedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendOperationCompletedRequest) ProtoMessage() {}

func (x *AppendOperationCompletedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gosboost_gosboost_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendOperationCompletedRequest.ProtoReflect.Descriptor instead.
func (*AppendOperationCompletedRequest) Descriptor() ([]byte, []int) {
	return file_gosboost_gosboost_proto_rawDescGZIP(), []int{1}
}

func (x *AppendOperationCompletedRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AppendOperationCompletedRequest) GetCompleted() uint64 {
	if x != nil {
		return x.Completed
	}
	return 0
}

type GetOperationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operations []*OperationInfo `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
}

func (x *GetOperationsResponse) Reset() {
	*x = GetOperationsResponse{}
	mi := &file_gosboost_gosboost_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperationsResponse) ProtoMessage() {}

func (x *GetOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gosboost_gosboost_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperationsResponse.ProtoReflect.Descriptor instead.
func (*GetOperationsResponse) Descriptor() ([]byte, []int) {
	return file_gosboost_gosboost_proto_rawDescGZIP(), []int{2}
}

func (x *GetOperationsResponse) GetOperations() []*OperationInfo {
	if x != nil {
		return x.Operations
	}
	return nil
}

type GetOperationsByStatusesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Statuses           []string `protobuf:"bytes,1,rep,name=statuses,proto3" json:"statuses,omitempty"`
	ExistingOperations []uint64 `protobuf:"varint,2,rep,packed,name=existingOperations,proto3" json:"existingOperations,omitempty"`
}

func (x *GetOperationsByStatusesRequest) Reset() {
	*x = GetOperationsByStatusesRequest{}
	mi := &file_gosboost_gosboost_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOperationsByStatusesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperationsByStatusesRequest) ProtoMessage() {}

func (x *GetOperationsByStatusesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gosboost_gosboost_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperationsByStatusesRequest.ProtoReflect.Descriptor instead.
func (*GetOperationsByStatusesRequest) Descriptor() ([]byte, []int) {
	return file_gosboost_gosboost_proto_rawDescGZIP(), []int{3}
}

func (x *GetOperationsByStatusesRequest) GetStatuses() []string {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *GetOperationsByStatusesRequest) GetExistingOperations() []uint64 {
	if x != nil {
		return x.ExistingOperations
	}
	return nil
}

type GetOperationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IDs []uint64 `protobuf:"varint,1,rep,packed,name=IDs,proto3" json:"IDs,omitempty"`
}

func (x *GetOperationsRequest) Reset() {
	*x = GetOperationsRequest{}
	mi := &file_gosboost_gosboost_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperationsRequest) ProtoMessage() {}

func (x *GetOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gosboost_gosboost_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperationsRequest.ProtoReflect.Descriptor instead.
func (*GetOperationsRequest) Descriptor() ([]byte, []int) {
	return file_gosboost_gosboost_proto_rawDescGZIP(), []int{4}
}

func (x *GetOperationsRequest) GetIDs() []uint64 {
	if x != nil {
		return x.IDs
	}
	return nil
}

type FailOperationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ErrorMsg string `protobuf:"bytes,2,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
}

func (x *FailOperationRequest) Reset() {
	*x = FailOperationRequest{}
	mi := &file_gosboost_gosboost_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FailOperationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailOperationRequest) ProtoMessage() {}

func (x *FailOperationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gosboost_gosboost_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailOperationRequest.ProtoReflect.Descriptor instead.
func (*FailOperationRequest) Descriptor() ([]byte, []int) {
	return file_gosboost_gosboost_proto_rawDescGZIP(), []int{5}
}

func (x *FailOperationRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FailOperationRequest) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

type OperationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StartTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Status    string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Data      string                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Type      string                 `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Error     string                 `protobuf:"bytes,7,opt,name=error,proto3" json:"error,omitempty"`
	Completed uint64                 `protobuf:"varint,8,opt,name=completed,proto3" json:"completed,omitempty"`
}

func (x *OperationInfo) Reset() {
	*x = OperationInfo{}
	mi := &file_gosboost_gosboost_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationInfo) ProtoMessage() {}

func (x *OperationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gosboost_gosboost_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationInfo.ProtoReflect.Descriptor instead.
func (*OperationInfo) Descriptor() ([]byte, []int) {
	return file_gosboost_gosboost_proto_rawDescGZIP(), []int{6}
}

func (x *OperationInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OperationInfo) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *OperationInfo) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *OperationInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OperationInfo) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *OperationInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OperationInfo) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *OperationInfo) GetCompleted() uint64 {
	if x != nil {
		return x.Completed
	}
	return 0
}

type GetChatTokensRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quantity int64 `protobuf:"varint,1,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *GetChatTokensRequest) Reset() {
	*x = GetChatTokensRequest{}
	mi := &file_gosboost_gosboost_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChatTokensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatTokensRequest) ProtoMessage() {}

func (x *GetChatTokensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gosboost_gosboost_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatTokensRequest.ProtoReflect.Descriptor instead.
func (*GetChatTokensRequest) Descriptor() ([]byte, []int) {
	return file_gosboost_gosboost_proto_rawDescGZIP(), []int{7}
}

func (x *GetChatTokensRequest) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type GetChatTokensResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens []string `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *GetChatTokensResponse) Reset() {
	*x = GetChatTokensResponse{}
	mi := &file_gosboost_gosboost_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChatTokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatTokensResponse) ProtoMessage() {}

func (x *GetChatTokensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gosboost_gosboost_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatTokensResponse.ProtoReflect.Descriptor instead.
func (*GetChatTokensResponse) Descriptor() ([]byte, []int) {
	return file_gosboost_gosboost_proto_rawDescGZIP(), []int{8}
}

func (x *GetChatTokensResponse) GetTokens() []string {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type UpdateFollowSuccessAndErrorTokensRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuccessTokens []string `protobuf:"bytes,1,rep,name=successTokens,proto3" json:"successTokens,omitempty"`
	ChannelId     int64    `protobuf:"varint,2,opt,name=channelId,proto3" json:"channelId,omitempty"`
	Username      string   `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	ErrorTokens   []string `protobuf:"bytes,4,rep,name=errorTokens,proto3" json:"errorTokens,omitempty"`
	Follow        bool     `protobuf:"varint,5,opt,name=follow,proto3" json:"follow,omitempty"`
}

func (x *UpdateFollowSuccessAndErrorTokensRequest) Reset() {
	*x = UpdateFollowSuccessAndErrorTokensRequest{}
	mi := &file_gosboost_gosboost_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFollowSuccessAndErrorTokensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFollowSuccessAndErrorTokensRequest) ProtoMessage() {}

func (x *UpdateFollowSuccessAndErrorTokensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gosboost_gosboost_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFollowSuccessAndErrorTokensRequest.ProtoReflect.Descriptor instead.
func (*UpdateFollowSuccessAndErrorTokensRequest) Descriptor() ([]byte, []int) {
	return file_gosboost_gosboost_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateFollowSuccessAndErrorTokensRequest) GetSuccessTokens() []string {
	if x != nil {
		return x.SuccessTokens
	}
	return nil
}

func (x *UpdateFollowSuccessAndErrorTokensRequest) GetChannelId() int64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *UpdateFollowSuccessAndErrorTokensRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdateFollowSuccessAndErrorTokensRequest) GetErrorTokens() []string {
	if x != nil {
		return x.ErrorTokens
	}
	return nil
}

func (x *UpdateFollowSuccessAndErrorTokensRequest) GetFollow() bool {
	if x != nil {
		return x.Follow
	}
	return false
}

type GetTokensForFollowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId  int64    `protobuf:"varint,1,opt,name=channelId,proto3" json:"channelId,omitempty"`
	Quantity   int64    `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Username   string   `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Follow     bool     `protobuf:"varint,4,opt,name=follow,proto3" json:"follow,omitempty"`
	SkipTokens []string `protobuf:"bytes,5,rep,name=skipTokens,proto3" json:"skipTokens,omitempty"`
}

func (x *GetTokensForFollowRequest) Reset() {
	*x = GetTokensForFollowRequest{}
	mi := &file_gosboost_gosboost_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokensForFollowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokensForFollowRequest) ProtoMessage() {}

func (x *GetTokensForFollowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gosboost_gosboost_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokensForFollowRequest.ProtoReflect.Descriptor instead.
func (*GetTokensForFollowRequest) Descriptor() ([]byte, []int) {
	return file_gosboost_gosboost_proto_rawDescGZIP(), []int{10}
}

func (x *GetTokensForFollowRequest) GetChannelId() int64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *GetTokensForFollowRequest) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *GetTokensForFollowRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetTokensForFollowRequest) GetFollow() bool {
	if x != nil {
		return x.Follow
	}
	return false
}

func (x *GetTokensForFollowRequest) GetSkipTokens() []string {
	if x != nil {
		return x.SkipTokens
	}
	return nil
}

type GetTokensForFollowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens []string `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *GetTokensForFollowResponse) Reset() {
	*x = GetTokensForFollowResponse{}
	mi := &file_gosboost_gosboost_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokensForFollowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokensForFollowResponse) ProtoMessage() {}

func (x *GetTokensForFollowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gosboost_gosboost_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokensForFollowResponse.ProtoReflect.Descriptor instead.
func (*GetTokensForFollowResponse) Descriptor() ([]byte, []int) {
	return file_gosboost_gosboost_proto_rawDescGZIP(), []int{11}
}

func (x *GetTokensForFollowResponse) GetTokens() []string {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type AddAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts []*Account `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
}

func (x *AddAccountsRequest) Reset() {
	*x = AddAccountsRequest{}
	mi := &file_gosboost_gosboost_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAccountsRequest) ProtoMessage() {}

func (x *AddAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gosboost_gosboost_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAccountsRequest.ProtoReflect.Descriptor instead.
func (*AddAccountsRequest) Descriptor() ([]byte, []int) {
	return file_gosboost_gosboost_proto_rawDescGZIP(), []int{12}
}

func (x *AddAccountsRequest) GetAccounts() []*Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	Oauth    string `protobuf:"bytes,2,opt,name=Oauth,proto3" json:"Oauth,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=Password,proto3" json:"Password,omitempty"`
	Chat     bool   `protobuf:"varint,4,opt,name=Chat,proto3" json:"Chat,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	mi := &file_gosboost_gosboost_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_gosboost_gosboost_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_gosboost_gosboost_proto_rawDescGZIP(), []int{13}
}

func (x *Account) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Account) GetOauth() string {
	if x != nil {
		return x.Oauth
	}
	return ""
}

func (x *Account) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Account) GetChat() bool {
	if x != nil {
		return x.Chat
	}
	return false
}

type Operation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Operation) Reset() {
	*x = Operation{}
	mi := &file_gosboost_gosboost_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_gosboost_gosboost_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation.ProtoReflect.Descriptor instead.
func (*Operation) Descriptor() ([]byte, []int) {
	return file_gosboost_gosboost_proto_rawDescGZIP(), []int{14}
}

func (x *Operation) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type IsUsernameValidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *IsUsernameValidRequest) Reset() {
	*x = IsUsernameValidRequest{}
	mi := &file_gosboost_gosboost_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsUsernameValidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsUsernameValidRequest) ProtoMessage() {}

func (x *IsUsernameValidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gosboost_gosboost_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsUsernameValidRequest.ProtoReflect.Descriptor instead.
func (*IsUsernameValidRequest) Descriptor() ([]byte, []int) {
	return file_gosboost_gosboost_proto_rawDescGZIP(), []int{15}
}

func (x *IsUsernameValidRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type IsUsernameValidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Valid bool `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
}

func (x *IsUsernameValidResponse) Reset() {
	*x = IsUsernameValidResponse{}
	mi := &file_gosboost_gosboost_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsUsernameValidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsUsernameValidResponse) ProtoMessage() {}

func (x *IsUsernameValidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gosboost_gosboost_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsUsernameValidResponse.ProtoReflect.Descriptor instead.
func (*IsUsernameValidResponse) Descriptor() ([]byte, []int) {
	return file_gosboost_gosboost_proto_rawDescGZIP(), []int{16}
}

func (x *IsUsernameValidResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

type TwitchFakeRaidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RaiderChannel   string `protobuf:"bytes,1,opt,name=raiderChannel,proto3" json:"raiderChannel,omitempty"`
	Quantity        int64  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	WaitTimeMinutes int64  `protobuf:"varint,3,opt,name=waitTimeMinutes,proto3" json:"waitTimeMinutes,omitempty"`
}

func (x *TwitchFakeRaidRequest) Reset() {
	*x = TwitchFakeRaidRequest{}
	mi := &file_gosboost_gosboost_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TwitchFakeRaidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwitchFakeRaidRequest) ProtoMessage() {}

func (x *TwitchFakeRaidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gosboost_gosboost_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwitchFakeRaidRequest.ProtoReflect.Descriptor instead.
func (*TwitchFakeRaidRequest) Descriptor() ([]byte, []int) {
	return file_gosboost_gosboost_proto_rawDescGZIP(), []int{17}
}

func (x *TwitchFakeRaidRequest) GetRaiderChannel() string {
	if x != nil {
		return x.RaiderChannel
	}
	return ""
}

func (x *TwitchFakeRaidRequest) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *TwitchFakeRaidRequest) GetWaitTimeMinutes() int64 {
	if x != nil {
		return x.WaitTimeMinutes
	}
	return 0
}

type TwitchFollowChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username   string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Quantity   int64  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Follow     bool   `protobuf:"varint,3,opt,name=follow,proto3" json:"follow,omitempty"`
	Extra      bool   `protobuf:"varint,4,opt,name=extra,proto3" json:"extra,omitempty"`
	IntervalMS int64  `protobuf:"varint,5,opt,name=intervalMS,proto3" json:"intervalMS,omitempty"`
}

func (x *TwitchFollowChannelRequest) Reset() {
	*x = TwitchFollowChannelRequest{}
	mi := &file_gosboost_gosboost_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TwitchFollowChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwitchFollowChannelRequest) ProtoMessage() {}

func (x *TwitchFollowChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gosboost_gosboost_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwitchFollowChannelRequest.ProtoReflect.Descriptor instead.
func (*TwitchFollowChannelRequest) Descriptor() ([]byte, []int) {
	return file_gosboost_gosboost_proto_rawDescGZIP(), []int{18}
}

func (x *TwitchFollowChannelRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *TwitchFollowChannelRequest) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *TwitchFollowChannelRequest) GetFollow() bool {
	if x != nil {
		return x.Follow
	}
	return false
}

func (x *TwitchFollowChannelRequest) GetExtra() bool {
	if x != nil {
		return x.Extra
	}
	return false
}

func (x *TwitchFollowChannelRequest) GetIntervalMS() int64 {
	if x != nil {
		return x.IntervalMS
	}
	return 0
}

type TwitchClipViewersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClipUrl  string `protobuf:"bytes,1,opt,name=clipUrl,proto3" json:"clipUrl,omitempty"`
	Quantity int64  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *TwitchClipViewersRequest) Reset() {
	*x = TwitchClipViewersRequest{}
	mi := &file_gosboost_gosboost_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TwitchClipViewersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwitchClipViewersRequest) ProtoMessage() {}

func (x *TwitchClipViewersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gosboost_gosboost_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwitchClipViewersRequest.ProtoReflect.Descriptor instead.
func (*TwitchClipViewersRequest) Descriptor() ([]byte, []int) {
	return file_gosboost_gosboost_proto_rawDescGZIP(), []int{19}
}

func (x *TwitchClipViewersRequest) GetClipUrl() string {
	if x != nil {
		return x.ClipUrl
	}
	return ""
}

func (x *TwitchClipViewersRequest) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type TwitchVODViewersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VodId    string `protobuf:"bytes,1,opt,name=vodId,proto3" json:"vodId,omitempty"`
	Quantity int64  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *TwitchVODViewersRequest) Reset() {
	*x = TwitchVODViewersRequest{}
	mi := &file_gosboost_gosboost_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TwitchVODViewersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwitchVODViewersRequest) ProtoMessage() {}

func (x *TwitchVODViewersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gosboost_gosboost_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwitchVODViewersRequest.ProtoReflect.Descriptor instead.
func (*TwitchVODViewersRequest) Descriptor() ([]byte, []int) {
	return file_gosboost_gosboost_proto_rawDescGZIP(), []int{20}
}

func (x *TwitchVODViewersRequest) GetVodId() string {
	if x != nil {
		return x.VodId
	}
	return ""
}

func (x *TwitchVODViewersRequest) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type TwitchLiveViewersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username         string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Quantity         int64  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Minutes          int64  `protobuf:"varint,3,opt,name=minutes,proto3" json:"minutes,omitempty"`
	StatisticViewers bool   `protobuf:"varint,4,opt,name=statisticViewers,proto3" json:"statisticViewers,omitempty"`
	ChatAuth         bool   `protobuf:"varint,5,opt,name=chatAuth,proto3" json:"chatAuth,omitempty"`
}

func (x *TwitchLiveViewersRequest) Reset() {
	*x = TwitchLiveViewersRequest{}
	mi := &file_gosboost_gosboost_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TwitchLiveViewersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwitchLiveViewersRequest) ProtoMessage() {}

func (x *TwitchLiveViewersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gosboost_gosboost_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwitchLiveViewersRequest.ProtoReflect.Descriptor instead.
func (*TwitchLiveViewersRequest) Descriptor() ([]byte, []int) {
	return file_gosboost_gosboost_proto_rawDescGZIP(), []int{21}
}

func (x *TwitchLiveViewersRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *TwitchLiveViewersRequest) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *TwitchLiveViewersRequest) GetMinutes() int64 {
	if x != nil {
		return x.Minutes
	}
	return 0
}

func (x *TwitchLiveViewersRequest) GetStatisticViewers() bool {
	if x != nil {
		return x.StatisticViewers
	}
	return false
}

func (x *TwitchLiveViewersRequest) GetChatAuth() bool {
	if x != nil {
		return x.ChatAuth
	}
	return false
}

type TwitchChattersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Quantity int64    `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Messages []string `protobuf:"bytes,3,rep,name=messages,proto3" json:"messages,omitempty"`
	Minutes  int64    `protobuf:"varint,4,opt,name=minutes,proto3" json:"minutes,omitempty"`
}

func (x *TwitchChattersRequest) Reset() {
	*x = TwitchChattersRequest{}
	mi := &file_gosboost_gosboost_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TwitchChattersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwitchChattersRequest) ProtoMessage() {}

func (x *TwitchChattersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gosboost_gosboost_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TwitchChattersRequest.ProtoReflect.Descriptor instead.
func (*TwitchChattersRequest) Descriptor() ([]byte, []int) {
	return file_gosboost_gosboost_proto_rawDescGZIP(), []int{22}
}

func (x *TwitchChattersRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *TwitchChattersRequest) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *TwitchChattersRequest) GetMessages() []string {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *TwitchChattersRequest) GetMinutes() int64 {
	if x != nil {
		return x.Minutes
	}
	return 0
}

var File_gosboost_gosboost_proto protoreflect.FileDescriptor

var file_gosboost_gosboost_proto_rawDesc = []byte{
	0x0a, 0x17, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x2f, 0x67, 0x6f, 0x73, 0x62, 0x6f,
	0x6f, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x67, 0x6f, 0x73, 0x62, 0x6f,
	0x6f, 0x73, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x3f, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x22, 0x4f, 0x0a, 0x1f, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x22, 0x50, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x6c, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x12, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x28, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x49,
	0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x49, 0x44, 0x73, 0x22, 0x42, 0x0a,
	0x14, 0x46, 0x61, 0x69, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73,
	0x67, 0x22, 0x83, 0x02, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x32, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x2f, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0xc4, 0x01, 0x0a,
	0x28, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x41, 0x6e, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x22, 0xa9, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x46, 0x6f, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x6b, 0x69, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6b, 0x69, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22,
	0x34, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x43, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x6b, 0x0a, 0x07, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x43, 0x68, 0x61, 0x74, 0x22, 0x1b, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x16, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2f, 0x0a, 0x17, 0x49, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x15,
	0x54, 0x77, 0x69, 0x74, 0x63, 0x68, 0x46, 0x61, 0x6b, 0x65, 0x52, 0x61, 0x69, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x61, 0x69, 0x64, 0x65, 0x72, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x61,
	0x69, 0x64, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x77, 0x61, 0x69, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x77, 0x61, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65,
	0x73, 0x22, 0xa2, 0x01, 0x0a, 0x1a, 0x54, 0x77, 0x69, 0x74, 0x63, 0x68, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x4d, 0x53, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x4d, 0x53, 0x22, 0x50, 0x0a, 0x18, 0x54, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x43, 0x6c, 0x69, 0x70, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x69, 0x70, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x69, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x4b, 0x0a, 0x17, 0x54, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x56, 0x4f, 0x44, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x6f, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xb4, 0x01, 0x0a, 0x18, 0x54, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x4c, 0x69, 0x76, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x68, 0x22, 0x85, 0x01, 0x0a,
	0x15, 0x54, 0x77, 0x69, 0x74, 0x63, 0x68, 0x43, 0x68, 0x61, 0x74, 0x74, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x73, 0x32, 0xed, 0x08, 0x0a, 0x0a, 0x47, 0x6f, 0x73, 0x42, 0x6f, 0x6f, 0x73,
	0x74, 0x44, 0x42, 0x12, 0x43, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x2e, 0x41, 0x64,
	0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x23,
	0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x73,
	0x62, 0x6f, 0x6f, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x6f, 0x73,
	0x62, 0x6f, 0x6f, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x21, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x41, 0x6e, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x12, 0x32, 0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41,
	0x6e, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3c, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x13, 0x2e, 0x67,
	0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x64, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x28, 0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x50, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x13,
	0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x13, 0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x40, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x13, 0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f,
	0x73, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x47, 0x0a, 0x0d, 0x46, 0x61, 0x69, 0x6c, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74,
	0x2e, 0x46, 0x61, 0x69, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3f, 0x0a,
	0x10, 0x49, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x13, 0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x55,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x13, 0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f,
	0x73, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x27, 0x2e, 0x67,
	0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x18, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x29, 0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x2e, 0x41, 0x70, 0x70,
	0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x32, 0xec, 0x04, 0x0a, 0x08, 0x47, 0x6f, 0x73, 0x42, 0x6f, 0x6f, 0x73,
	0x74, 0x12, 0x50, 0x0a, 0x13, 0x54, 0x77, 0x69, 0x74, 0x63, 0x68, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x24, 0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f,
	0x6f, 0x73, 0x74, 0x2e, 0x54, 0x77, 0x69, 0x74, 0x63, 0x68, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x11, 0x54, 0x77, 0x69, 0x74, 0x63, 0x68, 0x43, 0x6c, 0x69,
	0x70, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x12, 0x22, 0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f,
	0x6f, 0x73, 0x74, 0x2e, 0x54, 0x77, 0x69, 0x74, 0x63, 0x68, 0x43, 0x6c, 0x69, 0x70, 0x56, 0x69,
	0x65, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x67,
	0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x4a, 0x0a, 0x10, 0x54, 0x77, 0x69, 0x74, 0x63, 0x68, 0x56, 0x4f, 0x44, 0x56, 0x69,
	0x65, 0x77, 0x65, 0x72, 0x73, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74,
	0x2e, 0x54, 0x77, 0x69, 0x74, 0x63, 0x68, 0x56, 0x4f, 0x44, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f,
	0x6f, 0x73, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a,
	0x11, 0x54, 0x77, 0x69, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x76, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65,
	0x72, 0x73, 0x12, 0x22, 0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x2e, 0x54, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x76, 0x65, 0x56, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73,
	0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x0e, 0x54,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x43, 0x68, 0x61, 0x74, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x2e,
	0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x2e, 0x54, 0x77, 0x69, 0x74, 0x63, 0x68, 0x43,
	0x68, 0x61, 0x74, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x0e, 0x54, 0x77, 0x69, 0x74, 0x63, 0x68, 0x46, 0x61, 0x6b,
	0x65, 0x52, 0x61, 0x69, 0x64, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74,
	0x2e, 0x54, 0x77, 0x69, 0x74, 0x63, 0x68, 0x46, 0x61, 0x6b, 0x65, 0x52, 0x61, 0x69, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73,
	0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x0f, 0x49,
	0x73, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x20,
	0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x2e, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x2e, 0x49, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x13, 0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73,
	0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x6f, 0x73, 0x6d, 0x61, 0x63, 0x68, 0x31, 0x6e,
	0x65, 0x2e, 0x67, 0x6f, 0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x3b, 0x67, 0x6f,
	0x73, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gosboost_gosboost_proto_rawDescOnce sync.Once
	file_gosboost_gosboost_proto_rawDescData = file_gosboost_gosboost_proto_rawDesc
)

func file_gosboost_gosboost_proto_rawDescGZIP() []byte {
	file_gosboost_gosboost_proto_rawDescOnce.Do(func() {
		file_gosboost_gosboost_proto_rawDescData = protoimpl.X.CompressGZIP(file_gosboost_gosboost_proto_rawDescData)
	})
	return file_gosboost_gosboost_proto_rawDescData
}

var file_gosboost_gosboost_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_gosboost_gosboost_proto_goTypes = []any{
	(*GetCompletePercentageResponse)(nil),            // 0: gosboost.GetCompletePercentageResponse
	(*AppendOperationCompletedRequest)(nil),          // 1: gosboost.AppendOperationCompletedRequest
	(*GetOperationsResponse)(nil),                    // 2: gosboost.GetOperationsResponse
	(*GetOperationsByStatusesRequest)(nil),           // 3: gosboost.GetOperationsByStatusesRequest
	(*GetOperationsRequest)(nil),                     // 4: gosboost.GetOperationsRequest
	(*FailOperationRequest)(nil),                     // 5: gosboost.FailOperationRequest
	(*OperationInfo)(nil),                            // 6: gosboost.OperationInfo
	(*GetChatTokensRequest)(nil),                     // 7: gosboost.GetChatTokensRequest
	(*GetChatTokensResponse)(nil),                    // 8: gosboost.GetChatTokensResponse
	(*UpdateFollowSuccessAndErrorTokensRequest)(nil), // 9: gosboost.UpdateFollowSuccessAndErrorTokensRequest
	(*GetTokensForFollowRequest)(nil),                // 10: gosboost.GetTokensForFollowRequest
	(*GetTokensForFollowResponse)(nil),               // 11: gosboost.GetTokensForFollowResponse
	(*AddAccountsRequest)(nil),                       // 12: gosboost.AddAccountsRequest
	(*Account)(nil),                                  // 13: gosboost.Account
	(*Operation)(nil),                                // 14: gosboost.Operation
	(*IsUsernameValidRequest)(nil),                   // 15: gosboost.IsUsernameValidRequest
	(*IsUsernameValidResponse)(nil),                  // 16: gosboost.IsUsernameValidResponse
	(*TwitchFakeRaidRequest)(nil),                    // 17: gosboost.TwitchFakeRaidRequest
	(*TwitchFollowChannelRequest)(nil),               // 18: gosboost.TwitchFollowChannelRequest
	(*TwitchClipViewersRequest)(nil),                 // 19: gosboost.TwitchClipViewersRequest
	(*TwitchVODViewersRequest)(nil),                  // 20: gosboost.TwitchVODViewersRequest
	(*TwitchLiveViewersRequest)(nil),                 // 21: gosboost.TwitchLiveViewersRequest
	(*TwitchChattersRequest)(nil),                    // 22: gosboost.TwitchChattersRequest
	(*timestamppb.Timestamp)(nil),                    // 23: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                            // 24: google.protobuf.Empty
}
var file_gosboost_gosboost_proto_depIdxs = []int32{
	6,  // 0: gosboost.GetOperationsResponse.operations:type_name -> gosboost.OperationInfo
	23, // 1: gosboost.OperationInfo.startTime:type_name -> google.protobuf.Timestamp
	23, // 2: gosboost.OperationInfo.endTime:type_name -> google.protobuf.Timestamp
	13, // 3: gosboost.AddAccountsRequest.accounts:type_name -> gosboost.Account
	12, // 4: gosboost.GosBoostDB.AddAccounts:input_type -> gosboost.AddAccountsRequest
	10, // 5: gosboost.GosBoostDB.GetTokensForFollow:input_type -> gosboost.GetTokensForFollowRequest
	7,  // 6: gosboost.GosBoostDB.GetChatTokens:input_type -> gosboost.GetChatTokensRequest
	9,  // 7: gosboost.GosBoostDB.UpdateFollowSuccessAndErrorTokens:input_type -> gosboost.UpdateFollowSuccessAndErrorTokensRequest
	14, // 8: gosboost.GosBoostDB.GetOperation:input_type -> gosboost.Operation
	3,  // 9: gosboost.GosBoostDB.GetOperationsByStatuses:input_type -> gosboost.GetOperationsByStatusesRequest
	4,  // 10: gosboost.GosBoostDB.GetOperations:input_type -> gosboost.GetOperationsRequest
	6,  // 11: gosboost.GosBoostDB.CreateOperation:input_type -> gosboost.OperationInfo
	14, // 12: gosboost.GosBoostDB.StartOperation:input_type -> gosboost.Operation
	14, // 13: gosboost.GosBoostDB.CompleteOperation:input_type -> gosboost.Operation
	5,  // 14: gosboost.GosBoostDB.FailOperation:input_type -> gosboost.FailOperationRequest
	14, // 15: gosboost.GosBoostDB.InQueueOperation:input_type -> gosboost.Operation
	14, // 16: gosboost.GosBoostDB.GetCompletePercentage:input_type -> gosboost.Operation
	1,  // 17: gosboost.GosBoostDB.AppendOperationCompleted:input_type -> gosboost.AppendOperationCompletedRequest
	18, // 18: gosboost.GosBoost.TwitchFollowChannel:input_type -> gosboost.TwitchFollowChannelRequest
	19, // 19: gosboost.GosBoost.TwitchClipViewers:input_type -> gosboost.TwitchClipViewersRequest
	20, // 20: gosboost.GosBoost.TwitchVODViewers:input_type -> gosboost.TwitchVODViewersRequest
	21, // 21: gosboost.GosBoost.TwitchLiveViewers:input_type -> gosboost.TwitchLiveViewersRequest
	22, // 22: gosboost.GosBoost.TwitchChatters:input_type -> gosboost.TwitchChattersRequest
	17, // 23: gosboost.GosBoost.TwitchFakeRaid:input_type -> gosboost.TwitchFakeRaidRequest
	15, // 24: gosboost.GosBoost.IsUsernameValid:input_type -> gosboost.IsUsernameValidRequest
	14, // 25: gosboost.GosBoost.CancelOperation:input_type -> gosboost.Operation
	24, // 26: gosboost.GosBoostDB.AddAccounts:output_type -> google.protobuf.Empty
	11, // 27: gosboost.GosBoostDB.GetTokensForFollow:output_type -> gosboost.GetTokensForFollowResponse
	8,  // 28: gosboost.GosBoostDB.GetChatTokens:output_type -> gosboost.GetChatTokensResponse
	24, // 29: gosboost.GosBoostDB.UpdateFollowSuccessAndErrorTokens:output_type -> google.protobuf.Empty
	6,  // 30: gosboost.GosBoostDB.GetOperation:output_type -> gosboost.OperationInfo
	2,  // 31: gosboost.GosBoostDB.GetOperationsByStatuses:output_type -> gosboost.GetOperationsResponse
	2,  // 32: gosboost.GosBoostDB.GetOperations:output_type -> gosboost.GetOperationsResponse
	14, // 33: gosboost.GosBoostDB.CreateOperation:output_type -> gosboost.Operation
	24, // 34: gosboost.GosBoostDB.StartOperation:output_type -> google.protobuf.Empty
	24, // 35: gosboost.GosBoostDB.CompleteOperation:output_type -> google.protobuf.Empty
	24, // 36: gosboost.GosBoostDB.FailOperation:output_type -> google.protobuf.Empty
	24, // 37: gosboost.GosBoostDB.InQueueOperation:output_type -> google.protobuf.Empty
	0,  // 38: gosboost.GosBoostDB.GetCompletePercentage:output_type -> gosboost.GetCompletePercentageResponse
	24, // 39: gosboost.GosBoostDB.AppendOperationCompleted:output_type -> google.protobuf.Empty
	14, // 40: gosboost.GosBoost.TwitchFollowChannel:output_type -> gosboost.Operation
	14, // 41: gosboost.GosBoost.TwitchClipViewers:output_type -> gosboost.Operation
	14, // 42: gosboost.GosBoost.TwitchVODViewers:output_type -> gosboost.Operation
	14, // 43: gosboost.GosBoost.TwitchLiveViewers:output_type -> gosboost.Operation
	14, // 44: gosboost.GosBoost.TwitchChatters:output_type -> gosboost.Operation
	14, // 45: gosboost.GosBoost.TwitchFakeRaid:output_type -> gosboost.Operation
	16, // 46: gosboost.GosBoost.IsUsernameValid:output_type -> gosboost.IsUsernameValidResponse
	24, // 47: gosboost.GosBoost.CancelOperation:output_type -> google.protobuf.Empty
	26, // [26:48] is the sub-list for method output_type
	4,  // [4:26] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_gosboost_gosboost_proto_init() }
func file_gosboost_gosboost_proto_init() {
	if File_gosboost_gosboost_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gosboost_gosboost_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_gosboost_gosboost_proto_goTypes,
		DependencyIndexes: file_gosboost_gosboost_proto_depIdxs,
		MessageInfos:      file_gosboost_gosboost_proto_msgTypes,
	}.Build()
	File_gosboost_gosboost_proto = out.File
	file_gosboost_gosboost_proto_rawDesc = nil
	file_gosboost_gosboost_proto_goTypes = nil
	file_gosboost_gosboost_proto_depIdxs = nil
}
